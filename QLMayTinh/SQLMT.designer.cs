#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLMayTinh
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ComputerManager")]
	public partial class SQLMTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblPhonghoc(tblPhonghoc instance);
    partial void UpdatetblPhonghoc(tblPhonghoc instance);
    partial void DeletetblPhonghoc(tblPhonghoc instance);
    partial void InserttblMaytinh(tblMaytinh instance);
    partial void UpdatetblMaytinh(tblMaytinh instance);
    partial void DeletetblMaytinh(tblMaytinh instance);
    #endregion
		
		public SQLMTDataContext() : 
				base(global::QLMayTinh.Properties.Settings.Default.ComputerManagerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SQLMTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLMTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLMTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLMTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblPhonghoc> tblPhonghocs
		{
			get
			{
				return this.GetTable<tblPhonghoc>();
			}
		}
		
		public System.Data.Linq.Table<tblMaytinh> tblMaytinhs
		{
			get
			{
				return this.GetTable<tblMaytinh>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPhonghoc")]
	public partial class tblPhonghoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _msPhong;
		
		private string _tenPhong;
		
		private string _toaNha;
		
		private System.Nullable<int> _tangLau;
		
		private EntitySet<tblMaytinh> _tblMaytinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsPhongChanging(string value);
    partial void OnmsPhongChanged();
    partial void OntenPhongChanging(string value);
    partial void OntenPhongChanged();
    partial void OntoaNhaChanging(string value);
    partial void OntoaNhaChanged();
    partial void OntangLauChanging(System.Nullable<int> value);
    partial void OntangLauChanged();
    #endregion
		
		public tblPhonghoc()
		{
			this._tblMaytinhs = new EntitySet<tblMaytinh>(new Action<tblMaytinh>(this.attach_tblMaytinhs), new Action<tblMaytinh>(this.detach_tblMaytinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msPhong
		{
			get
			{
				return this._msPhong;
			}
			set
			{
				if ((this._msPhong != value))
				{
					this.OnmsPhongChanging(value);
					this.SendPropertyChanging();
					this._msPhong = value;
					this.SendPropertyChanged("msPhong");
					this.OnmsPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenPhong", DbType="NVarChar(50)")]
		public string tenPhong
		{
			get
			{
				return this._tenPhong;
			}
			set
			{
				if ((this._tenPhong != value))
				{
					this.OntenPhongChanging(value);
					this.SendPropertyChanging();
					this._tenPhong = value;
					this.SendPropertyChanged("tenPhong");
					this.OntenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toaNha", DbType="NVarChar(50)")]
		public string toaNha
		{
			get
			{
				return this._toaNha;
			}
			set
			{
				if ((this._toaNha != value))
				{
					this.OntoaNhaChanging(value);
					this.SendPropertyChanging();
					this._toaNha = value;
					this.SendPropertyChanged("toaNha");
					this.OntoaNhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tangLau", DbType="Int")]
		public System.Nullable<int> tangLau
		{
			get
			{
				return this._tangLau;
			}
			set
			{
				if ((this._tangLau != value))
				{
					this.OntangLauChanging(value);
					this.SendPropertyChanging();
					this._tangLau = value;
					this.SendPropertyChanged("tangLau");
					this.OntangLauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPhonghoc_tblMaytinh", Storage="_tblMaytinhs", ThisKey="msPhong", OtherKey="msPhong")]
		public EntitySet<tblMaytinh> tblMaytinhs
		{
			get
			{
				return this._tblMaytinhs;
			}
			set
			{
				this._tblMaytinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMaytinhs(tblMaytinh entity)
		{
			this.SendPropertyChanging();
			entity.tblPhonghoc = this;
		}
		
		private void detach_tblMaytinhs(tblMaytinh entity)
		{
			this.SendPropertyChanging();
			entity.tblPhonghoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMaytinh")]
	public partial class tblMaytinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _msMay;
		
		private string _CPU;
		
		private string _HardDisk;
		
		private string _RAM;
		
		private string _VGA;
		
		private string _Monitor;
		
		private string _msPhong;
		
		private EntityRef<tblPhonghoc> _tblPhonghoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsMayChanging(string value);
    partial void OnmsMayChanged();
    partial void OnCPUChanging(string value);
    partial void OnCPUChanged();
    partial void OnHardDiskChanging(string value);
    partial void OnHardDiskChanged();
    partial void OnRAMChanging(string value);
    partial void OnRAMChanged();
    partial void OnVGAChanging(string value);
    partial void OnVGAChanged();
    partial void OnMonitorChanging(string value);
    partial void OnMonitorChanged();
    partial void OnmsPhongChanging(string value);
    partial void OnmsPhongChanged();
    #endregion
		
		public tblMaytinh()
		{
			this._tblPhonghoc = default(EntityRef<tblPhonghoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msMay", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msMay
		{
			get
			{
				return this._msMay;
			}
			set
			{
				if ((this._msMay != value))
				{
					this.OnmsMayChanging(value);
					this.SendPropertyChanging();
					this._msMay = value;
					this.SendPropertyChanged("msMay");
					this.OnmsMayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU", DbType="NVarChar(100)")]
		public string CPU
		{
			get
			{
				return this._CPU;
			}
			set
			{
				if ((this._CPU != value))
				{
					this.OnCPUChanging(value);
					this.SendPropertyChanging();
					this._CPU = value;
					this.SendPropertyChanged("CPU");
					this.OnCPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardDisk", DbType="NVarChar(100)")]
		public string HardDisk
		{
			get
			{
				return this._HardDisk;
			}
			set
			{
				if ((this._HardDisk != value))
				{
					this.OnHardDiskChanging(value);
					this.SendPropertyChanging();
					this._HardDisk = value;
					this.SendPropertyChanged("HardDisk");
					this.OnHardDiskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAM", DbType="NVarChar(100)")]
		public string RAM
		{
			get
			{
				return this._RAM;
			}
			set
			{
				if ((this._RAM != value))
				{
					this.OnRAMChanging(value);
					this.SendPropertyChanging();
					this._RAM = value;
					this.SendPropertyChanged("RAM");
					this.OnRAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VGA", DbType="NVarChar(100)")]
		public string VGA
		{
			get
			{
				return this._VGA;
			}
			set
			{
				if ((this._VGA != value))
				{
					this.OnVGAChanging(value);
					this.SendPropertyChanging();
					this._VGA = value;
					this.SendPropertyChanged("VGA");
					this.OnVGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monitor", DbType="NVarChar(100)")]
		public string Monitor
		{
			get
			{
				return this._Monitor;
			}
			set
			{
				if ((this._Monitor != value))
				{
					this.OnMonitorChanging(value);
					this.SendPropertyChanging();
					this._Monitor = value;
					this.SendPropertyChanged("Monitor");
					this.OnMonitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msPhong", DbType="NVarChar(10)")]
		public string msPhong
		{
			get
			{
				return this._msPhong;
			}
			set
			{
				if ((this._msPhong != value))
				{
					if (this._tblPhonghoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmsPhongChanging(value);
					this.SendPropertyChanging();
					this._msPhong = value;
					this.SendPropertyChanged("msPhong");
					this.OnmsPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPhonghoc_tblMaytinh", Storage="_tblPhonghoc", ThisKey="msPhong", OtherKey="msPhong", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblPhonghoc tblPhonghoc
		{
			get
			{
				return this._tblPhonghoc.Entity;
			}
			set
			{
				tblPhonghoc previousValue = this._tblPhonghoc.Entity;
				if (((previousValue != value) 
							|| (this._tblPhonghoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPhonghoc.Entity = null;
						previousValue.tblMaytinhs.Remove(this);
					}
					this._tblPhonghoc.Entity = value;
					if ((value != null))
					{
						value.tblMaytinhs.Add(this);
						this._msPhong = value.msPhong;
					}
					else
					{
						this._msPhong = default(string);
					}
					this.SendPropertyChanged("tblPhonghoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
